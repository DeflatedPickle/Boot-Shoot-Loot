<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;
if (global.show_debug) exit;

draw_set_font(font_somic_cans);
draw_set_color(c_white);
draw_set_halign(fa_left);

xx = view_xview[global.current_view];
yy = view_yview[global.current_view];

//Score

draw_text_transformed(xx + 5 / global.zoom, yy + 3 / global.zoom, "SCORE:" + string(global.player_score), 0.5 / global.zoom, 0.5 / global.zoom, 0);

//Experience

draw_text_transformed(xx + 5 / global.zoom, yy + 265 / global.zoom, string(global.player_experience) + "/" + string(global.required_experience), 0.7 / global.zoom, 0.7 / global.zoom, 0);
draw_text_transformed(xx + 5 / global.zoom, yy + 280 / global.zoom, "LEVEL: " + string (global.player_level), 1 / global.zoom, 1 / global.zoom, 0);

//

//draw_set_halign(fa_right);
//draw_text_transformed(xx + 300 / global.zoom, yy + 3 / global.zoom, string(), 0.5 / global.zoom, 0.5 / global.zoom, 0);

//Ammo

draw_set_halign(fa_right);
draw_text_transformed(xx + 300 / global.zoom, yy + 270 / global.zoom, string(global.pewstol_magazine) + "/" + "100", 0.7 / global.zoom, 0.7 / global.zoom, 0);
draw_text_transformed(xx + 300 / global.zoom, yy + 280 / global.zoom, string(global.pewstol_clip) + "/" + "10", 1 / global.zoom, 1 / global.zoom, 0);

//if global.current_gun = "Gun"{
//    draw_set_halign (fa_left);
//    draw_text_transformed (xx + 3 / global.zoom, yy + 3 / global.zoom, string_upper ("Pewstol"), 0.5 / global.zoom, 0.5 / global.zoom, 0);
//    draw_set_halign (fa_right);
//    draw_text_transformed (xx + 300 / global.zoom, yy + 280 / global.zoom, string (global.player_ammo) + "/" + string (global.total_player_ammo), 1 / global.zoom, 1 / global.zoom, 0);
//}
//else if global.current_gun = "Assault"{
//    draw_set_halign (fa_left);
//    draw_text_transformed (xx + 3 / global.zoom, yy + 3 / global.zoom, string_upper ("AK-OK"), 0.5 / global.zoom, 0.5 / global.zoom, 0);
//    draw_set_halign (fa_right);
//    draw_text_transformed (xx + 300 / global.zoom, yy + 280 / global.zoom, string (global.assault_ammo) + "/" + string (global.total_assault_ammo), 1 / global.zoom, 1 / global.zoom, 0);
//}
//else if global.current_gun = "SMG"{
//    draw_set_halign (fa_left);
//    draw_text_transformed (xx + 3 / global.zoom, yy + 3 / global.zoom, string_upper ("Pzz-Tz-Tz-Tz"), 0.5 / global.zoom, 0.5 / global.zoom, 0);
//    draw_set_halign (fa_right);
//    draw_text_transformed (xx + 300 / global.zoom, yy + 280 / global.zoom, string (global.smg_ammo) + "/" + string (global.total_smg_ammo), 1 / global.zoom, 1 / global.zoom, 0);
//}
//else if global.current_gun = "Water"{
//    draw_set_halign (fa_left);
//    draw_text_transformed (xx + 3 / global.zoom, yy + 3 / global.zoom, string_upper ("Water Gun"), 0.5 / global.zoom, 0.5 / global.zoom, 0);
//    draw_set_halign (fa_right);
//    draw_text_transformed (xx + 300 / global.zoom, yy + 280 / global.zoom, string (global.smg_ammo) + "/" + string (global.total_smg_ammo), 1 / global.zoom, 1 / global.zoom, 0);
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
